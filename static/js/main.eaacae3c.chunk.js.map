{"version":3,"sources":["card/card.component.jsx","card-list/card-list.component.jsx","search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","image","name","description","CardList","monsters","map","id","SearchInput","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","monstersData","data","this","filteredMonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAKH,EAAMI,QAAQC,MAAOJ,UAAU,eACvD,oBAAIA,UAAU,aAAd,SAA4BD,EAAMI,QAAQE,OAC1C,mBAAGL,UAAU,mBAAb,SAAiCD,EAAMI,QAAQG,kBCH1CC,G,MAAW,SAAAR,GACpB,OACG,qBAAKC,UAAU,YAAf,SACED,EAAMS,SAASC,KAAK,SAAAN,GAAO,OACpB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQO,WCLtBC,G,MAAc,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACvB,uBACAb,UAAU,SACNc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC+BHG,E,kDAjCb,aAAe,IAAD,8BACZ,gBAYFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAXtC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IALH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,kEACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAY,OAAI,EAAKT,SAAS,CAAEV,SAAUmB,EAAaC,Y,oBAKjE,WAAU,IAAD,EAC2BC,KAAKP,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YAEZW,EAAkBtB,EAASuB,QAAO,SAAA5B,GAAO,OAC7CA,EAAQE,KAAK2B,cAAcC,SAASd,EAAYa,kBAGlD,OACE,sBAAKhC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAaY,YAAY,iBAAiBC,aAAcgB,KAAKhB,eAC7D,cAAC,EAAD,CAAUL,SAAUsB,W,GA5BVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.eaacae3c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.style.css\";\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img alt='monster' src={props.monster.image} className='card-image'/>\r\n        <h2 className='card-title'>{props.monster.name}</h2>\r\n        <p className='card-description'>{props.monster.description}</p>\r\n    </div>\r\n)","import React from \"react\";\r\nimport { Card } from \"../card/card.component\";\r\nimport \"./card-list.style.css\";\r\n\r\nexport const CardList = props => {\r\n    return (\r\n       <div className='card-list'>\r\n       { props.monsters.map( monster => (\r\n                <Card key={monster.id} monster={monster}/>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport './search-box.style.css'\r\n\r\nexport const SearchInput = ({placeholder,handleChange}) => (\r\n    <input \r\n    className='search'\r\n        type='search' \r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />\r\n)","import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './card-list/card-list.component';\nimport { SearchInput } from './search-box/search-box.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\"\n    };\n  }\n  componentDidMount() {\n    fetch('https://botw-compendium.herokuapp.com/api/v1/category/monsters')\n      .then(response => response.json())\n      .then(monstersData => this.setState({ monsters: monstersData.data }));\n  }\n  handleChange = e => {\n    this.setState({ searchField: e.target.value })\n  }\n  render() {\n    const { monsters, searchField } = this.state;\n\n    const filteredMonster = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n\n    return (\n      <div className=\"App\">\n        <h1>Monster Roledex</h1>\n        <SearchInput placeholder=\"Search Monster\" handleChange={this.handleChange} />\n        <CardList monsters={filteredMonster} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}